---

- name: Delete EC2 private key on AWS
  ec2_key:
    name: "{{ ec2_keypair_name }}"
    state: absent
    region: "{{ region_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: keypair

- name: Create EC2 private key 
  ec2_key:
    name: "{{ ec2_keypair_name }}"
    region: "{{ region_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: keypair

- name: Save EC2 private key 
  become: false
  copy: 
    content: "{{ keypair.key.private_key }}" 
    dest: "{{ ec2_keypair_name }}"
    mode: 0600

- name: Create EC2 VPC 
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region_name }}"
    state: present
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: create_vpc

- name: Set vpc_id
  set_fact:
    vpc_id: "{{ create_vpc.vpc.id }}"


- name: Associate subnet to the VPC
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_id }}"
    region: "{{ region_name }}"
    cidr: "{{ subnet_cidr }}"
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: create_subnet

- name: Set vpc_subnet_id
  set_fact:
    vpc_subnet_id: "{{ create_subnet.subnet.id }}"

- name: Create IGW
  ec2_vpc_igw:
    state: present
    vpc_id: "{{ vpc_id }}"
    region: "{{ region_name }}"
    tags:
      Name: "{{ igw_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: igw

- name: Route IGW
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region_name }}"
    subnets: 
      - "{{ vpc_subnet_id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: "Route IGW" 
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"

- name: Create EC2 Security Group 
  ec2_group:
    name: "{{ sg_name }}" 
    description: DMZ Security Group
    vpc_id: "{{ vpc_id }}"
    region: "{{ region_name }}"
    state: present
    rules:
    - proto: tcp
      from_port: 80 
      to_port: 80
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: security_group

- name: Set Security Group Id
  set_fact:
    sg_id: "{{ security_group.group_id }}"

- name: Add EC2 Cluster Master 
  ec2:
    key_name: "{{ ec2_keypair_name }}"
    instance_type: "{{ instance_flavour }}"
    image: "{{ ami_id }}"
    wait: yes
    instance_tags:
      Name: master 
    region: "{{ region_name }}"
    group: "{{ sg_name }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    count_tag:  
      Name: master 
    exact_count: 1
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: master

- name: Allocate Master Elastic IP 
  ec2_eip:
    state: present
    device_id: "{{ master.tagged_instances[0].id }}"
    region: "{{ region_name }}"
    in_vpc: yes
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: eip


- name: Add master to master group
  add_host:
    hostname: "{{ eip.public_ip }}"
    groupname: master


- name: Add EC2 Cluster Worker Nodes
  ec2:
    key_name: "{{ ec2_keypair_name }}"
    instance_type: "{{ instance_flavour }}"
    image: "{{ ami_id }}"
    wait: yes
    instance_tags:
      Name: "worker-{{ item }}" 
    region: "{{ region_name }}"
    group: "{{ sg_name }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    count_tag:  
      Name: "worker-{{ item }}" 
    exact_count: 1
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  with_items: ['1', '2']
  register: ec2_workers


- name: Add Cluster Worker Nodes to Worker Group
  add_host:
    groupname: workers
    hostname: "{{ item.tagged_instances[0].public_ip }}"
  with_items: "{{ ec2_workers.results }}"  


- name: Create EC2 Load Balancer 
  ec2_elb_lb:
    name: "{{ lb_name }}"
    state: present
    region: "{{ region_name }}"
    subnets: "{{ vpc_subnet_id }}"
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
    scheme: internet-facing
    security_group_names: "{{ sg_name }}"
    health_check:
            ping_protocol: http
            ping_port: 80
            ping_path: "/"
            response_timeout: 5
            interval: 30
            unhealthy_threshold: 2
            healthy_threshold: 2
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
  register: elb

- name: Add servers to Load Balancer 
  ec2_elb:
    state: present
    instance_id: "{{ item.id }}"
    ec2_elbs: "{{ lb_name }}"
    region: "{{ region_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ security_token }}"
    wait: no
  with_items: "{{ ec2_workers.results[0].tagged_instances }}"  
